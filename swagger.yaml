openapi: 3.0.0
info:
  title: Lao Running API
  description: API documentation for Lao Running application
  version: 1.0.0
servers:
  - url: /api
    description: Default API path
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
    Success:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object

paths:
  # User Controller
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                email:
                  type: string
                password:
                  type: string
                national_id:
                  type: string
                gender:
                  type: string
                  enum: ['male', 'female', 'other']
                dob:
                  type: string
                  format: date
                id_token:
                  type: string
                  description: OTP token for verification
                profile_image:
                  type: string
                  format: binary
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/validate/first:
    post:
      tags:
        - Authentication
      summary: Validate first step of registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
      responses:
        '200':
          description: Validation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '422':
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/validate/second:
    post:
      tags:
        - Authentication
      summary: Validate second step of registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Validation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '422':
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email or phone number
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user information
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/range:
    put:
      tags:
        - Authentication
      summary: Update user range
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                range:
                  type: string
      responses:
        '200':
          description: Range updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/reset-password:
    post:
      tags:
        - Authentication
      summary: Reset user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_token:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Admin User Management
  /admin:
    post:
      tags:
        - Admin
      summary: Create a new admin
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Admin created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - Admin
      summary: Get all admins
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Admins retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /admin/{id}:
    get:
      tags:
        - Admin
      summary: Get admin by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Admin retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Admin not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Admin
      summary: Delete admin
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Admin deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Admin not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /admin/{id}/reset-password:
    put:
      tags:
        - Admin
      summary: Reset admin password
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_password:
                  type: string
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Admin not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Runner Controller
  /runner/profile:
    put:
      tags:
        - Runner
      summary: Update runner profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                gender:
                  type: string
                  enum: ['male', 'female', 'other']
                dob:
                  type: string
                  format: date
                national_id:
                  type: string
                profile_image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /runner/location:
    put:
      tags:
        - Runner
      summary: Update runner location
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hal_branche_id:
                  type: integer
                size:
                  type: string
                  enum: ['S', 'M', 'L', 'XL', 'XXL']
      responses:
        '200':
          description: Location updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /runner/profile:
    get:
      tags:
        - Runner
      summary: Get runner profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /runner/unique:
    get:
      tags:
        - Runner
      summary: Check if phone number is unique
      parameters:
        - name: phone
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Phone number check result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /runner/payments/{packageId}/bcel:
    get:
      tags:
        - Runner
      summary: Generate BCEL QR payment for package
      security:
        - bearerAuth: []
      parameters:
        - name: packageId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: QR code generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '404':
          description: Package not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /runner/payments/{packageId}/confirm:
    post:
      tags:
        - Runner
      summary: Confirm BCEL payment
      security:
        - bearerAuth: []
      parameters:
        - name: packageId
          in: path
          required: true
          schema:
            type: integer
        - name: transaction_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment confirmed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '404':
          description: Transaction or package not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /runner:
    get:
      tags:
        - Runner
      summary: Get all runners
      security:
        - bearerAuth: []
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
        - name: bib
          in: query
          schema:
            type: string
        - name: package_runner
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Runners retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /runner/{user_profile_id}:
    get:
      tags:
        - Runner
      summary: Get runner by profile ID
      security:
        - bearerAuth: []
      parameters:
        - name: user_profile_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Runner retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  # OTP Controller
  /otp:
    post:
      tags:
        - OTP
      summary: Request OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
      responses:
        '200':
          description: OTP sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '500':
          description: OTP not sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /otp/resend:
    post:
      tags:
        - OTP
      summary: Resend OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
      responses:
        '200':
          description: OTP resent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '404':
          description: OTP not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /otp/verify:
    post:
      tags:
        - OTP
      summary: Verify OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                code:
                  type: string
      responses:
        '200':
          description: OTP verified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Invalid OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Run Result Controller
  /run-results:
    post:
      tags:
        - Run Results
      summary: Create run result
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                time:
                  type: integer
                  description: Time in seconds
                range:
                  type: number
                  format: float
                  description: Distance in km
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Run result created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - Run Results
      summary: Get all run results for current user
      security:
        - bearerAuth: []
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
        - name: status
          in: query
          schema:
            type: string
            enum: ['pending', 'approve', 'reject']
      responses:
        '200':
          description: Run results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /run-results/{id}:
    get:
      tags:
        - Run Results
      summary: Get run result by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Run result retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

    put:
      tags:
        - Run Results
      summary: Update run result status
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: ['pending', 'approve', 'reject']
      responses:
        '200':
          description: Run result updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

    delete:
      tags:
        - Run Results
      summary: Delete run result
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Run result deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /admin/run-results:
    get:
      tags:
        - Run Results
      summary: Get all run results (admin)
      security:
        - bearerAuth: []
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
        - name: status
          in: query
          schema:
            type: string
            enum: ['pending', 'approve', 'reject']
      responses:
        '200':
          description: Run results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  # Manual Payment Controller
  /manual-payments:
    post:
      tags:
        - Manual Payments
      summary: Create manual payment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                package_id:
                  type: integer
                amount:
                  type: number
                address:
                  type: string
                size:
                  type: string
                payment_slip:
                  type: string
                  format: binary
      responses:
        '200':
          description: Manual payment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - Manual Payments
      summary: Get user's manual payments
      security:
        - bearerAuth: []
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
        - name: status
          in: query
          schema:
            type: string
            enum: ['pending', 'approved', 'rejected']
      responses:
        '200':
          description: Manual payments retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /manual-payments/upload-slip:
    post:
      tags:
        - Manual Payments
      summary: Upload additional payment slip
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                payment_slip:
                  type: string
                  format: binary
      responses:
        '200':
          description: Payment slip uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /manual-payments/current:
    get:
      tags:
        - Manual Payments
      summary: Get current user's payment and package
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Payment information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /admin/manual-payments:
    get:
      tags:
        - Manual Payments
      summary: Get all manual payments (admin)
      security:
        - bearerAuth: []
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
        - name: status
          in: query
          schema:
            type: string
            enum: ['pending', 'approved', 'rejected']
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Manual payments retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /admin/manual-payments/{id}:
    get:
      tags:
        - Manual Payments
      summary: Get manual payment by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Manual payment retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '404':
          description: Payment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /admin/manual-payments/{id}/approve:
    put:
      tags:
        - Manual Payments
      summary: Approve manual payment
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: string
      responses:
        '200':
          description: Payment approved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '404':
          description: Payment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /admin/manual-payments/{id}/reject:
    put:
      tags:
        - Manual Payments
      summary: Reject manual payment
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: string
                  description: Rejection reason (required)
      responses:
        '200':
          description: Payment rejected successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Reason required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Summary Controller
  /summary:
    get:
      tags:
        - Summary
      summary: Get financial summary
      security:
        - bearerAuth: []
      parameters:
        - name: package_id
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Summary retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /summary/range:
    get:
      tags:
        - Summary
      summary: Get total range summary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Total range retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  # Video Controller
  /videos:
    post:
      tags:
        - Videos
      summary: Create video
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                link:
                  type: string
      responses:
        '200':
          description: Video created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

    get:
      tags:
        - Videos
      summary: Get all videos
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Videos retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /videos/{id}:
    get:
      tags:
        - Videos
      summary: Get video by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Video retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '404':
          description: Video not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Videos
      summary: Delete video
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Video deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '404':
          description: Video not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Contact Controller
  /contacts:
    post:
      tags:
        - Contacts
      summary: Create contact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                phone:
                  type: string
                message:
                  type: string
      responses:
        '200':
          description: Contact created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

    get:
      tags:
        - Contacts
      summary: Get all contacts
      security:
        - bearerAuth: []
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Contacts retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /contacts/{id}:
    get:
      tags:
        - Contacts
      summary: Get contact by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Contact retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '404':
          description: Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Contacts
      summary: Delete contact
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Contact deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '404':
          description: Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Info Controller
  /info/packages:
    get:
      tags:
        - Info
      summary: Get all packages
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Packages retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /info/packages/{id}:
    get:
      tags:
        - Info
      summary: Get package by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Package retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /info/branches:
    get:
      tags:
        - Info
      summary: Get all branches
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Branches retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /info/branches/{id}:
    get:
      tags:
        - Info
      summary: Get branch by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Branch retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /info/nations:
    get:
      tags:
        - Info
      summary: Get all nations
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Nations retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /info/nations/{id}:
    get:
      tags:
        - Info
      summary: Get nation by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Nation retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /info/ranking:
    get:
      tags:
        - Info
      summary: Get all rankings
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
        - name: range
          in: query
          schema:
            type: string
        - name: bib
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Rankings retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /info/images:
    get:
      tags:
        - Info
      summary: Get all run result images
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Images retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /info/summary:
    get:
      tags:
        - Info
      summary: Get application summary
      responses:
        '200':
          description: Summary retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'