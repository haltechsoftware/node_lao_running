name: Build and Deploy to Server

on:
  push:
    branches:
      - release
  pull_request:
    branches:
      - release

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 3: Install dependencies
      - name: Install dependencies
        run: pnpm install

      # Step 4: Deploy using Rsync
      - name: Deploy using Rsync
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -avzr --delete --exclude="/assets" --exclude="/storage"
          path: './'
          remote_path: '/var/www/api'
          remote_host: ${{ secrets.DEV_HOST }}
          remote_user: root
          remote_key: ${{ secrets.DEV_DEPLOYMENT_KEY }}

      # Step 5: SSH into Server and Start Application with PM2
      - name: Start Application with PM2
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.DEV_HOST }}
          username: root
          key: ${{ secrets.DEV_DEPLOYMENT_KEY }}
          script: |
            cd /var/www/api
            echo "NODE_ENV=production" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "F_ISS=${{ secrets.F_ISS }}" >> .env
            echo "CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }}" >> .env
            echo "CLOUDINARY_KEY=${{ secrets.CLOUDINARY_KEY }}" >> .env
            echo "CLOUDINARY_SECRET=${{ secrets.CLOUDINARY_SECRET }}" >> .env
            echo "DEV_DB_USERNAME=${{ secrets.DEV_DB_USERNAME }}" >> .env
            echo "DEV_DB_PASSWORD=${{ secrets.DEV_DB_PASSWORD }}" >> .env
            echo "DEV_DB_NAME=${{ secrets.DEV_DB_NAME }}" >> .env
            echo "DEV_DB_HOST=${{ secrets.DEV_DB_HOST }}" >> .env
            npm i pnpm -g
            pnpm i
            pm2 restart "api" || pm2 start npm --name "api" -- run start:prod
